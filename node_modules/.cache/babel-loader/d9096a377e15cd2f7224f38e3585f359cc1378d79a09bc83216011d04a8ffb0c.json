{"ast":null,"code":"var _jsxFileName = \"/Users/anjalichaturvedi/GitHub/anjalichaturvedi.github.io copy/src/components/Program.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Flex, Text, Icon, useColorModeValue } from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst timelineData = [{\n  title: 'Project Initiation',\n  date: 'January 2020',\n  progress: true\n}, {\n  title: 'Development Phase',\n  date: 'March 2020',\n  progress: true\n}, {\n  title: 'Testing and QA',\n  date: 'May 2020',\n  progress: true\n}, {\n  title: 'Launch',\n  date: 'July 2020',\n  progress: true\n}, {\n  title: 'Post-launch Support',\n  date: 'August 2020',\n  progress: false\n}];\nfunction Timeline() {\n  _s();\n  const lineColor = useColorModeValue('gray.300', 'gray.600');\n  const iconColor = useColorModeValue('green.500', 'green.300');\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: \"column\",\n    alignItems: \"center\",\n    pt: \"4\",\n    children: timelineData.map((event, index) => /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        direction: \"column\",\n        alignItems: \"center\",\n        mr: \"4\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          borderRadius: \"full\",\n          bg: event.progress ? 'green.500' : 'gray.300',\n          w: \"10px\",\n          h: \"10px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), index !== timelineData.length - 1 && /*#__PURE__*/_jsxDEV(Box, {\n          bg: lineColor,\n          w: \"1px\",\n          flex: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: \"bold\",\n          mb: \"1\",\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"sm\",\n          color: \"gray.500\",\n          children: event.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), event.progress && /*#__PURE__*/_jsxDEV(Icon, {\n          as: CheckIcon,\n          color: iconColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Timeline, \"ebx26CNqbV1hkegJW52Irsb3TO8=\", false, function () {\n  return [useColorModeValue, useColorModeValue];\n});\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","Box","Flex","Text","Icon","useColorModeValue","CheckIcon","jsxDEV","_jsxDEV","timelineData","title","date","progress","Timeline","_s","lineColor","iconColor","direction","alignItems","pt","children","map","event","index","mr","borderRadius","bg","w","h","fileName","_jsxFileName","lineNumber","columnNumber","length","flex","fontWeight","mb","fontSize","color","as","_c","$RefreshReg$"],"sources":["/Users/anjalichaturvedi/GitHub/anjalichaturvedi.github.io copy/src/components/Program.js"],"sourcesContent":["import React from 'react';\nimport { Box, Flex, Text, Icon, useColorModeValue } from '@chakra-ui/react';\nimport { CheckIcon } from '@chakra-ui/icons';\n\nconst timelineData = [\n  { title: 'Project Initiation', date: 'January 2020', progress: true },\n  { title: 'Development Phase', date: 'March 2020', progress: true },\n  { title: 'Testing and QA', date: 'May 2020', progress: true },\n  { title: 'Launch', date: 'July 2020', progress: true },\n  { title: 'Post-launch Support', date: 'August 2020', progress: false },\n];\n\nfunction Timeline() {\n  const lineColor = useColorModeValue('gray.300', 'gray.600');\n  const iconColor = useColorModeValue('green.500', 'green.300');\n\n  return (\n    <Flex direction=\"column\" alignItems=\"center\" pt=\"4\">\n      {timelineData.map((event, index) => (\n        <Flex key={index} alignItems=\"flex-start\">\n          {/* Left side */}\n          <Flex direction=\"column\" alignItems=\"center\" mr=\"4\">\n            {/* Circle Icon */}\n            <Box borderRadius=\"full\" bg={event.progress ? 'green.500' : 'gray.300'} w=\"10px\" h=\"10px\" />\n\n            {/* Vertical Line */}\n            {index !== timelineData.length - 1 && (\n              <Box bg={lineColor} w=\"1px\" flex=\"1\" />\n            )}\n          </Flex>\n\n          {/* Right side */}\n          <Box>\n            <Text fontWeight=\"bold\" mb=\"1\">{event.title}</Text>\n            <Text fontSize=\"sm\" color=\"gray.500\">{event.date}</Text>\n            {event.progress && <Icon as={CheckIcon} color={iconColor} />}\n          </Box>\n        </Flex>\n      ))}\n    </Flex>\n  );\n}\n\nexport default Timeline;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}