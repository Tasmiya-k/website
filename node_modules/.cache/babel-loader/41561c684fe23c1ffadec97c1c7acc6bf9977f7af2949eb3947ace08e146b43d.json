{"ast":null,"code":"var _jsxFileName = \"/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/src/components/Email.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Container, Text, VStack, Input, Button, Grid,\n// Import Grid component\nHeading, useColorModeValue } from '@chakra-ui/react';\nimport { useForm, ValidationError } from '@formspree/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubscriptionSection = () => {\n  _s();\n  const [state, handleSubmit] = useForm(\"mayrgkba\"); // Replace \"mayrgkba\" with your actual Formspree form ID\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bgGradient: \"linear(to-b, white, gray.100)\",\n    py: \"50px\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"8xl\",\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 4,\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          fontSize: \"lg\",\n          fontWeight: \"bold\",\n          children: \"Get to know what we're doing, first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Subscribe to our newsletter to stay updated with our latest events and news.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), state.succeeded ? /*#__PURE__*/_jsxDEV(Text, {\n          color: \"green.500\",\n          children: \"We've received your email and we will not spam!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            templateColumns: \"1fr\",\n            gap: 2,\n            w: \"100%\",\n            maxW: \"md\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Enter your email\",\n              type: \"email\",\n              name: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"teal\",\n              type: \"submit\",\n              w: \"full\",\n              isLoading: state.submitting,\n              children: state.submitting ? 'Subscribing...' : 'Subscribe'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n            prefix: \"Email\",\n            field: \"email\",\n            errors: state.errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(SubscriptionSection, \"SzbQxrvQUV4DSvQQhTwcmgv5UiE=\", false, function () {\n  return [useForm];\n});\n_c = SubscriptionSection;\nexport default SubscriptionSection;\nvar _c;\n$RefreshReg$(_c, \"SubscriptionSection\");","map":{"version":3,"names":["React","Box","Container","Text","VStack","Input","Button","Grid","Heading","useColorModeValue","useForm","ValidationError","jsxDEV","_jsxDEV","SubscriptionSection","_s","state","handleSubmit","bgGradient","py","children","maxW","spacing","textAlign","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","succeeded","color","onSubmit","templateColumns","gap","w","placeholder","type","name","required","colorScheme","isLoading","submitting","prefix","field","errors","_c","$RefreshReg$"],"sources":["/Users/anjalichaturvedi/GitHub/brew-bridge-dashboard/website/src/components/Email.js"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Container,\n  Text,\n  VStack,\n  Input,\n  Button,\n  Grid, // Import Grid component\n  Heading,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { useForm, ValidationError } from '@formspree/react';\n\nconst SubscriptionSection = () => {\n  const [state, handleSubmit] = useForm(\"mayrgkba\"); // Replace \"mayrgkba\" with your actual Formspree form ID\n\n  return (\n    <Box bgGradient=\"linear(to-b, white, gray.100)\" py=\"50px\">\n      <Container maxW=\"8xl\">\n        <VStack spacing={4} textAlign=\"center\">\n          <Heading fontSize=\"lg\" fontWeight=\"bold\">\n            Get to know what we're doing, first\n          </Heading>\n          <Text>Subscribe to our newsletter to stay updated with our latest events and news.</Text>\n          {state.succeeded ? (\n            <Text color=\"green.500\">We've received your email and we will not spam!</Text>\n          ) : (\n            <form onSubmit={handleSubmit}>\n              <Grid templateColumns=\"1fr\" gap={2} w=\"100%\" maxW=\"md\"> {/* Grid setup */}\n                <Input\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  name=\"email\"\n                  required\n                />\n                <Button\n                  colorScheme=\"teal\"\n                  type=\"submit\"\n                  w=\"full\"\n                  isLoading={state.submitting}\n                >\n                  {state.submitting ? 'Subscribing...' : 'Subscribe'}\n                </Button>\n              </Grid>\n              <ValidationError\n                prefix=\"Email\"\n                field=\"email\"\n                errors={state.errors}\n              />\n            </form>\n          )}\n        </VStack>\n      </Container>\n    </Box>\n  );\n};\n\nexport default SubscriptionSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}